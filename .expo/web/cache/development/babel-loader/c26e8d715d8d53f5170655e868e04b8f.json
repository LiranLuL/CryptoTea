{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Liran\\\\CryptoChat\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { RecyclerViewBackedScrollView } from \"react-native-web/dist/index\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.onSubmit = function () {\n      if (_this.state.title.length > 0) _this.props.onAdd(_this.state);\n      return null;\n    };\n\n    _this.setStateUtil = function (property) {\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n      _this.setState(_defineProperty({}, property, value));\n    };\n\n    _this.state = {\n      color: 'red'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          title = _this$state.title,\n          completed = _this$state.completed;\n      var onBlur = this.props.onBlur;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, React.createElement(Button, {\n        onPress: true,\n        title: \"dasd\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/Liran/CryptoChat/App.js"],"names":["React","useState","RecyclerViewBackedScrollView","App","props","onSubmit","state","title","length","onAdd","setStateUtil","property","value","undefined","setState","color","completed","onBlur","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;;;;;;SACqGC,4B;;IAGhFC,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAOnBC,QAPmB,GAOR,YAAM;AACf,UAAI,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAA0B,CAA9B,EAAiC,MAAKJ,KAAL,CAAWK,KAAX,CAAiB,MAAKH,KAAtB;AACjC,aAAO,IAAP;AACD,KAVkB;;AAAA,UAYnBI,YAZmB,GAYJ,UAACC,QAAD,EAAiC;AAAA,UAAtBC,KAAsB,uEAAdC,SAAc;;AAC9C,YAAKC,QAAL,qBACGH,QADH,EACcC,KADd;AAGD,KAhBkB;;AAEjB,UAAKN,KAAL,GAAa;AACZS,MAAAA,KAAK,EAAC;AADM,KAAb;AAFiB;AAKlB;;;;6BAaQ;AAAA,wBACsB,KAAKT,KAD3B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQS,SADR,eACQA,SADR;AAAA,UAECC,MAFD,GAEY,KAAKb,KAFjB,CAECa,MAFD;AAGP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACA,QAAA,OAAO,MADP;AAEA,QAAA,KAAK,EAAC,MAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAQD;;;;EA9B8BjB,KAAK,CAACkB,S;;SAAlBf,G","sourcesContent":["import React,{useState} from 'react';\r\nimport {CheckBox ,ImageBackground,TouchableOpacity,StyleSheet, Text, View, TextInput, Alert, Button, RecyclerViewBackedScrollView } from 'react-native';\r\n\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n     color:'red',\r\n    };\r\n  }\r\n\r\n  onSubmit = () => {\r\n    if (this.state.title.length > 0) this.props.onAdd(this.state);\r\n    return null;\r\n  };\r\n\r\n  setStateUtil = (property, value = undefined) => {\r\n    this.setState({\r\n      [property]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { title, completed } = this.state;\r\n    const { onBlur } = this.props;\r\n    return (\r\n      <View>\r\n        <Button\r\n        onPress\r\n        title=\"dasd\"\r\n        ></Button>\r\n      </View>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}