{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Liran\\\\CryptoChat\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { RecyclerViewBackedScrollView } from \"react-native-web/dist/index\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      counter: 0\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return state = {\n        color: 'red'\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 3\n        }\n      }, React.createElement(Button, {\n        style: styles.button,\n        title: \"PRESSME\",\n        onPress: function onPress() {\n          return styles.button.color = _this2.state.color;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 3\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component());\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    flex: 1\n  },\n  button: {\n    color: 'red',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Liran/CryptoChat/App.js"],"names":["React","useState","RecyclerViewBackedScrollView","App","state","counter","handleClick","bind","color","styles","container","button","Component","StyleSheet","create","justifyContent","alignItems","flex"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;;;;;SAC4FC,4B;;IAEtFC,G;;;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AAJY;AAKb;;;;6BACQ;AAAA;;AACT,aACEH,KAAK,GAAG;AACNI,QAAAA,KAAK,EAAC;AADA,OAAR,EAGF,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAED,MAAM,CAACE,MAAtB;AACA,QAAA,KAAK,EAAC,SADN;AAEA,QAAA,OAAO,EAAE;AAAA,iBAAIF,MAAM,CAACE,MAAP,CAAcH,KAAd,GAAoB,MAAI,CAACJ,KAAL,CAAWI,KAAnC;AAAA,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAJA;AAWD;;;;EAnBiBR,KAAK,CAACY,SAAN,E;;AAqBlB,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAC;AACZK,IAAAA,cAAc,EAAC,QADH;AAEZC,IAAAA,UAAU,EAAC,QAFC;AAGZC,IAAAA,IAAI,EAAC;AAHO,GADqB;AAM/BN,EAAAA,MAAM,EAAC;AACLH,IAAAA,KAAK,EAAC,KADD;AAEPO,IAAAA,cAAc,EAAC,QAFR;AAGPC,IAAAA,UAAU,EAAC;AAHJ;AANwB,CAAlB,CAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport { ImageBackground,TouchableOpacity,StyleSheet, Text, View, TextInput, Alert, Button, RecyclerViewBackedScrollView } from 'react-native';\r\n\r\nclass App extends React.Component() {\r\n  constructor() {\r\n    super();\r\n    // Не вызывайте здесь this.setState()!\r\n    this.state = { counter: 0 };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  render() {\r\n  return (\r\n    state = { \r\n      color:'red'\r\n    },\r\n  <View style={styles.container}>\r\n  <Button style={styles.button} \r\n  title=\"PRESSME\"\r\n  onPress={()=>styles.button.color=this.state.color}\r\n  ></Button>  \r\n  </View>\r\n  );\r\n}}\r\n\r\nconst styles = StyleSheet.create({\r\n  container:{\r\njustifyContent:'center',\r\nalignItems:'center',\r\nflex:1,\r\n  },\r\n  button:{\r\n    color:'red',\r\n  justifyContent:'center',\r\n  alignItems:'center',\r\n},\r\n});\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}