{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Liran\\\\CryptoChat\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport images from 'res/images';\nimport colors from 'res/colors';\n\nvar ImageButton = function (_React$Component) {\n  _inherits(ImageButton, _React$Component);\n\n  var _super = _createSuper(ImageButton);\n\n  function ImageButton() {\n    _classCallCheck(this, ImageButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ImageButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableOpacity, {\n        style: styles.touchable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.view,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }\n      }, this.props.title)), React.createElement(Image, {\n        source: images.button,\n        style: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ImageButton;\n}(React.Component);\n\nexport { ImageButton as default };\nvar styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  },\n  image: {},\n  touchable: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: colors.button,\n    fontSize: 18,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Liran/CryptoChat/App.js"],"names":["React","images","colors","ImageButton","styles","touchable","view","text","props","title","button","image","Component","StyleSheet","create","position","backgroundColor","alignItems","justifyContent","color","fontSize","textAlign"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,MAAP,MAAmB,YAAnB;;IAEqBC,W;;;;;;;;;;;;;6BACV;AACP,aACE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEC,MAAM,CAACC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B,KAAKC,KAAL,CAAWC,KAAtC,CADF,CADF,EAIE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAER,MAAM,CAACS,MADjB;AAEE,QAAA,KAAK,EAAEN,MAAM,CAACO,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAUD;;;;EAZsCX,KAAK,CAACY,S;;SAA1BT,W;AAerB,IAAMC,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,IAAI,EAAE;AACJS,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,eAAe,EAAE;AAFb,GADyB;AAK/BL,EAAAA,KAAK,EAAE,EALwB;AAQ/BN,EAAAA,SAAS,EAAE;AACTY,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,cAAc,EAAE;AAFP,GARoB;AAY/BX,EAAAA,IAAI,EAAE;AACJY,IAAAA,KAAK,EAAEjB,MAAM,CAACQ,MADV;AAEJU,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,SAAS,EAAE;AAHP;AAZyB,CAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport { TouchableOpacity, View, Image, Text, StyleSheet } from 'react-native'\r\nimport images from 'res/images'\r\nimport colors from 'res/colors'\r\n\r\nexport default class ImageButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <TouchableOpacity style={styles.touchable}>\r\n        <View style={styles.view}>\r\n          <Text style={styles.text}>{this.props.title}</Text>\r\n        </View>\r\n        <Image\r\n          source={images.button}\r\n          style={styles.image} />\r\n      </TouchableOpacity>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  view: {\r\n    position: 'absolute',\r\n    backgroundColor: 'transparent'\r\n  },\r\n  image: {\r\n\r\n  },\r\n  touchable: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  text: {\r\n    color: colors.button,\r\n    fontSize: 18,\r\n    textAlign: 'center'\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}