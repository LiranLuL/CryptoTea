{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Liran\\\\CryptoChat\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { RecyclerViewBackedScrollView } from \"react-native-web/dist/index\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.onSubmit = function () {\n      if (_this.state.title.length > 0) _this.props.onAdd(_this.state);\n      return null;\n    };\n\n    _this.setStateUtil = function (property) {\n      var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n      _this.setState(_defineProperty({}, property, value));\n    };\n\n    _this.state = {\n      color: 'red'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          title = _this$state.title,\n          completed = _this$state.completed;\n      var onBlur = this.props.onBlur;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          width: '100%',\n          flexDirection: 'row',\n          alignItems: 'center',\n          paddingRight: 10,\n          paddingBottom: 5,\n          paddingTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, React.createElement(CheckBox, {\n        checked: completed,\n        onPress: function onPress() {\n          return _this2.setStateUtil('completed', !completed);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }), React.createElement(Body, {\n        style: {\n          flex: 1,\n          justifyContent: 'flex-start',\n          alignItems: 'flex-start',\n          paddingLeft: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          width: '90%'\n        },\n        placeholder: \"What needs to be done?\",\n        autoFocus: true,\n        underLineColorAndroid: \"transparent\",\n        underlineColor: \"transparent\",\n        blurOnSubmit: true,\n        onSubmitEditing: this.onSubmit,\n        onChangeText: function onChangeText(changedTitle) {\n          return _this2.setStateUtil('title', changedTitle);\n        },\n        value: title,\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        onBlur: onBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.onCancelDelete;\n        },\n        style: {\n          paddingLeft: 25,\n          paddingRight: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(Ionicons, {\n        name: \"ios-trash-outline\",\n        color: \"\" + (title.length > 0 ? 'black' : 'grey'),\n        size: 23,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/Liran/CryptoChat/App.js"],"names":["React","useState","RecyclerViewBackedScrollView","App","props","onSubmit","state","title","length","onAdd","setStateUtil","property","value","undefined","setState","color","completed","onBlur","flex","width","flexDirection","alignItems","paddingRight","paddingBottom","paddingTop","justifyContent","paddingLeft","changedTitle","onCancelDelete","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;;;;;SAC4FC,4B;;IAGvEC,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAOnBC,QAPmB,GAOR,YAAM;AACf,UAAI,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAA0B,CAA9B,EAAiC,MAAKJ,KAAL,CAAWK,KAAX,CAAiB,MAAKH,KAAtB;AACjC,aAAO,IAAP;AACD,KAVkB;;AAAA,UAYnBI,YAZmB,GAYJ,UAACC,QAAD,EAAiC;AAAA,UAAtBC,KAAsB,uEAAdC,SAAc;;AAC9C,YAAKC,QAAL,qBACGH,QADH,EACcC,KADd;AAGD,KAhBkB;;AAEjB,UAAKN,KAAL,GAAa;AACZS,MAAAA,KAAK,EAAC;AADM,KAAb;AAFiB;AAKlB;;;;6BAaQ;AAAA;;AAAA,wBACsB,KAAKT,KAD3B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQS,SADR,eACQA,SADR;AAAA,UAECC,MAFD,GAEY,KAAKb,KAFjB,CAECa,MAFD;AAGP,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,CADD;AAELC,UAAAA,KAAK,EAAE,MAFF;AAGLC,UAAAA,aAAa,EAAE,KAHV;AAILC,UAAAA,UAAU,EAAE,QAJP;AAKLC,UAAAA,YAAY,EAAE,EALT;AAMLC,UAAAA,aAAa,EAAE,CANV;AAOLC,UAAAA,UAAU,EAAE;AAPP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAER,SAAnB;AAA8B,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACN,YAAL,CAAkB,WAAlB,EAA+B,CAACM,SAAhC,CAAN;AAAA,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAYE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLE,UAAAA,IAAI,EAAE,CADD;AAELO,UAAAA,cAAc,EAAE,YAFX;AAGLJ,UAAAA,UAAU,EAAE,YAHP;AAILK,UAAAA,WAAW,EAAE;AAJR,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE;AAAEP,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,WAAW,EAAC,wBAFd;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,qBAAqB,EAAC,aAJxB;AAKE,QAAA,cAAc,EAAC,aALjB;AAME,QAAA,YAAY,MANd;AAOE,QAAA,eAAe,EAAE,KAAKd,QAPxB;AAQE,QAAA,YAAY,EAAE,sBAAAsB,YAAY;AAAA,iBAAI,MAAI,CAACjB,YAAL,CAAkB,OAAlB,EAA2BiB,YAA3B,CAAJ;AAAA,SAR5B;AASE,QAAA,KAAK,EAAEpB,KATT;AAUE,QAAA,WAAW,EAAE,KAVf;AAWE,QAAA,cAAc,EAAC,MAXjB;AAYE,QAAA,MAAM,EAAEU,MAZV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAZF,EAmCE,oBAAC,gBAAD;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACb,KAAL,CAAWwB,cAAjB;AAAA,SADX;AAEE,QAAA,KAAK,EAAE;AAAEF,UAAAA,WAAW,EAAE,EAAf;AAAmBJ,UAAAA,YAAY,EAAE;AAAjC,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAC,mBADP;AAEE,QAAA,KAAK,QAAKf,KAAK,CAACC,MAAN,GAAe,CAAf,GAAmB,OAAnB,GAA6B,MAAlC,CAFP;AAGE,QAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAnCF,CADF;AAgDD;;;;EAtE8BR,KAAK,CAAC6B,S;;SAAlB1B,G","sourcesContent":["import React,{useState} from 'react';\r\nimport { ImageBackground,TouchableOpacity,StyleSheet, Text, View, TextInput, Alert, Button, RecyclerViewBackedScrollView } from 'react-native';\r\n\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n     color:'red',\r\n    };\r\n  }\r\n\r\n  onSubmit = () => {\r\n    if (this.state.title.length > 0) this.props.onAdd(this.state);\r\n    return null;\r\n  };\r\n\r\n  setStateUtil = (property, value = undefined) => {\r\n    this.setState({\r\n      [property]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { title, completed } = this.state;\r\n    const { onBlur } = this.props;\r\n    return (\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          width: '100%',\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n          paddingRight: 10,\r\n          paddingBottom: 5,\r\n          paddingTop: 5,\r\n        }}\r\n      >\r\n        <CheckBox checked={completed} onPress={() => this.setStateUtil('completed', !completed)} />\r\n        <Body\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: 'flex-start',\r\n            alignItems: 'flex-start',\r\n            paddingLeft: 25,\r\n          }}\r\n        >\r\n          <TextInput\r\n            style={{ width: '90%' }}\r\n            placeholder=\"What needs to be done?\"\r\n            autoFocus\r\n            underLineColorAndroid=\"transparent\"\r\n            underlineColor=\"transparent\"\r\n            blurOnSubmit\r\n            onSubmitEditing={this.onSubmit}\r\n            onChangeText={changedTitle => this.setStateUtil('title', changedTitle)}\r\n            value={title}\r\n            autoCorrect={false}\r\n            autoCapitalize=\"none\"\r\n            onBlur={onBlur}\r\n          />\r\n        </Body>\r\n        <TouchableOpacity\r\n          onPress={() => this.props.onCancelDelete}\r\n          style={{ paddingLeft: 25, paddingRight: 15 }}\r\n        >\r\n          <Ionicons\r\n            name=\"ios-trash-outline\"\r\n            color={`${title.length > 0 ? 'black' : 'grey'}`}\r\n            size={23}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}