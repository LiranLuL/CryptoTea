<InputPassword>:
    BoxLayout:
        canvas:
            Color:
                rgba: .10, .10, .10, 1   
            Rectangle:
                pos: self.pos
                size: self.size
        orientation : 'vertical'
        padding : 15, 10, 15, 50
        spacing : 0
        BoxLayout:
            orientation : 'vertical'
            padding : 0, 0, 0, 80
            size_hint: 1, .5
            spacing: 1

            BoxLayout:
                size_hint : 1, .7
                orientation : 'vertical'
                Widget:
                    Image:
                        source: 'Crypto.png'
                        size: self.parent.size
                        stretch: True
                        y: self.parent.y + self.parent.height/2 - self.height/2
                        x: self.parent.x + self.parent.width/2 - self.width/2 + 50

            BoxLayout:
                padding : 0, 30, 0, 0
                size_hint : 1, .2
                padding : 45, 0, 45, 0
                BackgroundLabel:
                    id: lbl
                    text : ""
                    font_size : 60      
            BoxLayout:
                padding : 0, 25, 0, 0
                size_hint : 1, .1
                
                Label:
                    id: status
                    pos_hint: {'center_y': .8}
                    font_size : 20
                    text: "введите пароль"
  
        GridLayout:
            size_hint: 1, .5
            cols: 3
            rows: 4
            spacing: 7, 12
            ButtonInput:
                id: 1
                text: "1"
                on_press: root.add_point(self)
            ButtonInput:
                text: "2"
                on_press: root.add_point(self)
            ButtonInput:
                text: "3"
                on_press: root.add_point(self)
            ButtonInput:
                text: "4"
                on_press: root.add_point(self)
            ButtonInput:
                text: "5"
                on_press: root.add_point(self)
            ButtonInput:
                text: "6"
                on_press: root.add_point(self)
            ButtonInput:
                text: "7"
                on_press: root.add_point(self)
            ButtonInput:
                text: "8"
                on_press: root.add_point(self)
            ButtonInput:
                text: "9"
                on_press: root.add_point(self) 
            ButtonInput:
                on_release: root.manager.current 
                Image:
                    source: 'touch.png'
                    y: self.parent.y + self.parent.height/2 - 35/2 - 2.5
                    x: self.parent.x + self.parent.width/2 - 35/2
                    size: 35, 35

            ButtonInput:
                text: "0"
                on_press: root.add_point(self)                
            ButtonInput:

                on_press: root.del_point(self) 
                Image:
                    source: 'clean.png'
                    size: self.parent.size
                    stretch: True
                    y: self.parent.y + self.parent.height/2 - self.height/2
                    x: self.parent.x + self.parent.width/2 - self.width/2
                                   

   


<BackgroundColor@Widget>:
    background_color: .20, .9, .19, 0
    canvas.before:
        Color:
            rgba: root.background_color
        Rectangle:
            size: self.size
            pos: self.pos

<BackgroundLabel@Label+BackgroundColor>:
    background_normal: ''
    canvas.before:
        Color:
            rgba: .50, .22, .49, .4

        RoundedRectangle:
            pos: self.pos             
            size: self.size             
            radius: [15] 

<ButtonInput@Button>:
    background_color: .10, .10, .10, 0
    halign: 'center'
    font_size: 20
    font: "Leelawadee UI"
    text_size: root.width, None
    canvas.before:
        Color:
            rgba: (.10, .10, .10, 1 ) if self.state=='normal' else (.07, .07, .07, 1 )  
        RoundedRectangle:
            pos: self.pos
            size: self.size